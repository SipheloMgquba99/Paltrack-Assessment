name: dockercompose14615641178053989199
services:
  paltrack.webapi:
    build:
      context: C:\Users\SipheloMgquba\RiderProjects\Paltrack Assessment
      dockerfile: Paltrack.WebApi/Dockerfile
    container_name: paltrack-api
    depends_on:
      postgres:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Username=postgres;Password=YourSecurePassword;Database=PaltrackDb
    networks:
      paltracknet: null
    ports:
      - mode: ingress
        target: 80
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\SipheloMgquba\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\SipheloMgquba\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  postgres:
    container_name: paltrack-postgres
    environment:
      POSTGRES_DB: PaltrackDb
      POSTGRES_PASSWORD: YourSecurePassword
      POSTGRES_USER: postgres
    image: postgres:15
    networks:
      paltracknet: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: volume
        source: pgdata
        target: /var/lib/postgresql/data
        volume: {}
networks:
  paltracknet:
    name: dockercompose14615641178053989199_paltracknet
    driver: bridge
volumes:
  pgdata:
    name: dockercompose14615641178053989199_pgdata